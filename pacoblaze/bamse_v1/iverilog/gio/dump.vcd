$date
	Fri Sep 20 21:32:22 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module io_bamse_tb $end
$scope module ports $end
$var wire 3 ! PortA [2:0] $end
$var wire 8 " PortB [7:0] $end
$var wire 1 # clk $end
$var wire 8 $ port_id [7:0] $end
$var wire 8 % port_in [7:0] $end
$var wire 1 & ren $end
$var wire 1 ' rst $end
$var wire 1 ( wen $end
$var wire 8 ) port_out [7:0] $end
$var wire 8 * portB_bus_8 [7:0] $end
$var wire 8 + portB_bus [7:0] $end
$var wire 8 , portA_bus_8 [7:0] $end
$var wire 3 - portA_bus [2:0] $end
$var wire 3 . portA_IOC_Pos_bus [2:0] $end
$var wire 3 / portA_IOC_Neg_bus [2:0] $end
$var wire 1 0 interrupt $end
$var wire 8 1 PortC [7:0] $end
$scope module PortA_IOC_Neg_Conf $end
$var wire 8 2 address [7:0] $end
$var wire 1 ' rst $end
$var wire 3 3 value_in [2:0] $end
$var wire 1 ( wen $end
$var reg 3 4 port_out [2:0] $end
$upscope $end
$scope module PortA_IOC_Pos_Conf $end
$var wire 8 5 address [7:0] $end
$var wire 1 ' rst $end
$var wire 3 6 value_in [2:0] $end
$var wire 1 ( wen $end
$var reg 3 7 port_out [2:0] $end
$upscope $end
$scope module Port_A $end
$var wire 8 8 address [7:0] $end
$var wire 1 # clk $end
$var wire 3 9 down_port [2:0] $end
$var wire 3 : ioc_neg_conf [2:0] $end
$var wire 3 ; ioc_pos_conf [2:0] $end
$var wire 3 < port_in [2:0] $end
$var wire 1 & ren $end
$var wire 1 ' rst $end
$var wire 3 = up_port [2:0] $end
$var reg 3 > c1_port [2:0] $end
$var reg 3 ? c2_port [2:0] $end
$var reg 1 0 int_out $end
$var reg 1 @ int_reset $end
$var reg 3 A port_out [2:0] $end
$var reg 3 B sync_port [2:0] $end
$upscope $end
$scope module Port_B $end
$var wire 8 C address [7:0] $end
$var wire 1 # clk $end
$var wire 8 D port_in [7:0] $end
$var wire 1 & ren $end
$var wire 1 ' rst $end
$var reg 8 E port_out [7:0] $end
$upscope $end
$scope module Port_C $end
$var wire 8 F address [7:0] $end
$var wire 1 ' rst $end
$var wire 8 G value_in [7:0] $end
$var wire 1 ( wen $end
$var reg 8 H port_out [7:0] $end
$upscope $end
$scope module input_ports $end
$var wire 8 I address [7:0] $end
$var wire 8 J in_port0 [7:0] $end
$var wire 8 K in_port1 [7:0] $end
$var reg 8 L out_port [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 L
bx K
b0xxx J
b0 I
bx H
b0 G
b0 F
bx E
b0 D
b0 C
bx B
bx A
x@
bx ?
bx >
bx =
b0 <
bx ;
bx :
bx 9
b0 8
bx 7
b0 6
b0 5
bx 4
b0 3
b0 2
bx 1
x0
bx /
bx .
bx -
b0xxx ,
bx +
bx *
b0 )
0(
0'
0&
b0 %
b0 $
0#
b0 "
b0 !
$end
#5
0@
b0 B
1#
#10
b0 9
b0 =
b0 /
b0 4
b0 :
b0 .
b0 7
b0 ;
b0 1
b0 H
0#
1'
#15
b0 *
b0 K
b0 +
b0 E
00
b0 ,
b0 J
b0 -
b0 A
b0 ?
b0 >
1#
#20
0#
0'
#25
1#
#30
0#
b10 $
b10 2
b10 5
b10 8
b10 C
b10 F
b10 I
#35
1#
#40
b11 6
b11 3
0#
b11 %
b11 G
#45
1#
#50
b11 .
b11 7
b11 ;
0#
1(
#55
1#
#60
0#
0(
#65
1#
#70
0#
b11 $
b11 2
b11 5
b11 8
b11 C
b11 F
b11 I
#75
1#
#80
b101 6
b101 3
0#
b101 %
b101 G
#85
1#
#90
b101 /
b101 4
b101 :
0#
1(
#95
1#
#100
0#
0(
#105
1#
#110
0#
b1 !
b1 <
#115
b1 B
1#
#120
0#
#125
b1 =
b1 >
1#
#130
0#
#135
b0 =
10
b1 ?
1#
#140
0#
#145
1#
#150
0#
b1 $
b1 2
b1 5
b1 8
b1 C
b1 F
b1 I
#155
1#
#160
0#
1&
#165
b1 )
b1 L
1@
b1 ,
b1 J
b1 -
b1 A
1#
#170
0#
0&
#175
00
0@
1#
#180
b0 )
b0 L
0#
b0 $
b0 2
b0 5
b0 8
b0 C
b0 F
b0 I
#185
1#
#190
0#
#195
1#
#200
0#
#205
1#
#210
0#
#215
1#
#220
0#
b0 !
b0 <
#225
b0 B
1#
#230
0#
#235
b1 9
b0 >
1#
#240
0#
#245
b0 9
b0 ?
10
1#
#250
0#
#255
1#
#260
b1 )
b1 L
0#
b1 $
b1 2
b1 5
b1 8
b1 C
b1 F
b1 I
#265
1#
#270
0#
1&
#275
b0 )
b0 L
1@
b0 ,
b0 J
b0 -
b0 A
1#
#280
0#
0&
#285
0@
00
1#
#290
0#
b0 $
b0 2
b0 5
b0 8
b0 C
b0 F
b0 I
#295
1#
#300
0#
b10 !
b10 <
#305
b10 B
1#
#310
0#
#315
b10 =
b10 >
1#
#320
0#
#325
b0 =
b10 ?
10
1#
#330
0#
#335
1#
#340
0#
b1 $
b1 2
b1 5
b1 8
b1 C
b1 F
b1 I
#345
1#
#350
0#
1&
#355
b10 )
b10 L
1@
b10 ,
b10 J
b10 -
b10 A
1#
#360
0#
0&
#365
0@
00
1#
#370
b0 )
b0 L
0#
b0 $
b0 2
b0 5
b0 8
b0 C
b0 F
b0 I
#375
1#
#380
0#
#385
1#
#390
0#
#395
1#
#400
0#
#405
1#
#410
0#
b0 !
b0 <
#415
b0 B
1#
#420
0#
#425
b0 >
1#
#430
0#
#435
b0 ?
1#
#440
0#
#445
1#
#450
b10 )
b10 L
0#
b1 $
b1 2
b1 5
b1 8
b1 C
b1 F
b1 I
#455
1#
#460
0#
1&
#465
b0 )
b0 L
1@
b0 ,
b0 J
b0 -
b0 A
1#
#470
0#
0&
#475
0@
1#
#480
0#
b0 $
b0 2
b0 5
b0 8
b0 C
b0 F
b0 I
#485
1#
#490
0#
b100 !
b100 <
#495
b100 B
1#
#500
0#
#505
b100 >
1#
#510
0#
#515
b100 ?
1#
#520
0#
#525
1#
#530
0#
b1 $
b1 2
b1 5
b1 8
b1 C
b1 F
b1 I
#535
1#
#540
0#
1&
#545
b100 )
b100 L
1@
b100 ,
b100 J
b100 -
b100 A
1#
#550
0#
0&
#555
0@
1#
#560
b0 )
b0 L
0#
b0 $
b0 2
b0 5
b0 8
b0 C
b0 F
b0 I
#565
1#
#570
0#
#575
1#
#580
0#
#585
1#
#590
0#
#595
1#
#600
0#
b0 !
b0 <
#605
b0 B
1#
#610
0#
#615
b100 9
b0 >
1#
#620
0#
#625
b0 9
b0 ?
10
1#
#630
0#
#635
1#
#640
b100 )
b100 L
0#
b1 $
b1 2
b1 5
b1 8
b1 C
b1 F
b1 I
#645
1#
#650
0#
1&
#655
b0 )
b0 L
1@
b0 ,
b0 J
b0 -
b0 A
1#
#660
0#
0&
#665
0@
00
1#
#670
0#
b0 $
b0 2
b0 5
b0 8
b0 C
b0 F
b0 I
#675
1#
#680
0#
b10111011 "
b10111011 D
#685
1#
#690
0#
b100 $
b100 2
b100 5
b100 8
b100 C
b100 F
b100 I
#695
1#
#700
0#
1&
#705
b10111011 )
b10111011 L
b10111011 *
b10111011 K
b10111011 +
b10111011 E
1#
#710
0#
0&
#715
1#
#720
b0 )
b0 L
0#
b101 $
b101 2
b101 5
b101 8
b101 C
b101 F
b101 I
#725
1#
#730
b100 6
b100 3
0#
b11001100 %
b11001100 G
#735
1#
#740
b11001100 1
b11001100 H
0#
1(
#745
1#
#750
0#
0(
#755
1#
#760
0#
#765
1#
#770
0#
#775
1#
#780
0#
#785
1#
#790
0#
#795
1#
#800
0#
#805
1#
#810
0#
#815
1#
#820
0#
#825
1#
#830
0#
#835
1#
#840
0#
#845
1#
#850
0#
