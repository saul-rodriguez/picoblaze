Open PicoBlaze Assembler log for program "test_delay.psm"
Generated by opbasm v1.3.9
  Assembled on 2019-09-25T01:32:08
  Target architecture: PicoBlaze-3

  Last occupied address: 036 hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 55
  Memory locations available: 969
  Scratchpad size: 64


Optimizations
-------------
  Static analysis:
    Dead instructions found: 2
    Analyzed entry points: 0x000, 0x3FF
  Dead code removal: Applied


Assembly listing
----------------
000                                          ;--------------------------------------------------------
000                                          ; File Created by SDCC : free open source ANSI-C Compiler
000                                          ; Version 3.0.1 #6227 (Oct 24 2011) (CYGWIN)
000                                          ; This file was generated Wed Sep 25 01:31:59 2019
000                                          ;--------------------------------------------------------
000                                          ;--------------------------------------------------------
000                                          ; global & static initialisations
000                                          ;--------------------------------------------------------

000  00F3F                                   load sf, 3f
001  34002            ╭⤙                     jump __sdcc_program_startup
002                   │                      ;--------------------------------------------------------
002                   │                      ; Home
002                   │                      ;--------------------------------------------------------
002                   │ __sdcc_program_startup:
002  3002E      ╭─────┴⤙                     call _main
003             │                            ;	return from main will lock up
003             │               __sdcc_loop:
003  34003      │     ╰▶                     jump __sdcc_loop
004             │                            ;--------------------------------------------------------
004             │                            ; code
004             │                            ;--------------------------------------------------------
004             │                            ;	../common/delay.h:28: void delay()
004             │                    _delay:
004             │                            ;	../common/delay.h:35: __endasm;
004             │                            ;REMOVED: load s0, 0xb2
004             │                     rpt11:
004  18001      │    ╭┬▶                     add s0, 01
005  35404      │    │╰⤙                     jump NZ, rpt11
006  2A000      │    │                       return
007             │    │                       ;	../common/delay.h:38: void delay_10us_fixed()
007             │    │    _delay_10us_fixed:
007             │    │                       ;	../common/delay.h:45: __endasm;
007  000B6      │  ╭───▶                     load s0, 0xb6
008             │  │ │                rpt22:
008  18001      │  │ │                       add s0, 01
009  35404      │  │ ╰─⤙                     jump NZ, rpt11
00A  2A000      │  │                         return
00B             │  │                         ;	../common/delay.h:48: void delay_10us(unsigned char time)
00B             │  │            _delay_10us:
00B  010B0      │ ╭────▶                     load s0, sb
00C             │ ││                         ;	../common/delay.h:52: for (i=0; i<time; i++)  {
00C  00100      │ ││                         load s1, 00
00D             │ ││                _L00105:
00D  15100      │ ││ ╭─▶                     compare s1, s0
00E  35810      │ ││ │╭⤙                     jump C, _LC00129
00F  3401B      │ ││╭──⤙                     jump _L00113
010             │ │││││            _LC00129:
010             │ │││││                      ;	../common/delay.h:53: delay_10us_fixed();
010  2F0F0      │ ││││╰▶                     store s0, (sf)
011  1CF01      │ ││││                       sub sf, 01
012  2F1F0      │ ││││                       store s1, (sf)
013  1CF01      │ ││││                       sub sf, 01
014  30007      │ │╰───⤙                     call _delay_10us_fixed
015  18F01      │ │ ││                       add sf, 01
016  071F0      │ │ ││                       fetch s1, (sf)
017  18F01      │ │ ││                       add sf, 01
018  070F0      │ │ ││                       fetch s0, (sf)
019             │ │ ││                       ;	../common/delay.h:52: for (i=0; i<time; i++)  {
019  18101      │ │ ││                       add s1, 01
01A  3400D      │ │ │╰─⤙                     jump _L00105
01B             │ │ │               _L00113:
01B  2A000      │ │ ╰──▶                     return
01C             │ │                          ;	../common/delay.h:57: void delay_ms(unsigned char time)
01C             │ │               _delay_ms:
01C  010B0      │╭─┬───▶                     load s0, sb
01D             ││││                         ;	../common/delay.h:61: for (i=0; i<time; i++)  {
01D  00100      ││││                         load s1, 00
01E             ││││                _L00114:
01E  15100      ││││ ╭─▶                     compare s1, s0
01F  35821      ││││ │╭⤙                     jump C, _LC00130
020  3402D      ││││╭──⤙                     jump _L00122
021             │││││││            _LC00130:
021             │││││││                      ;	../common/delay.h:62: delay_10us(100);
021  2F0F0      ││││││╰▶                     store s0, (sf)
022  1CF01      ││││││                       sub sf, 01
023  2F1F0      ││││││                       store s1, (sf)
024  1CF01      ││││││                       sub sf, 01
025  00B64      ││││││                       load sb, 64
026  3000B      ││╰────⤙                     call _delay_10us
027  18F01      ││ │││                       add sf, 01
028  071F0      ││ │││                       fetch s1, (sf)
029  18F01      ││ │││                       add sf, 01
02A  070F0      ││ │││                       fetch s0, (sf)
02B             ││ │││                       ;	../common/delay.h:61: for (i=0; i<time; i++)  {
02B  18101      ││ │││                       add s1, 01
02C  3401E      ││ ││╰─⤙                     jump _L00114
02D             ││ ││               _L00122:
02D  2A000      ││ │╰──▶                     return
02E             ││ │                         ;	test_delay.c:5: void main()
02E             ││ │                  _main:
02E             ││ │                         ;	test_delay.c:11: while(1) {
02E             ││ │                _L00124:
02E             ││ │                         ;	test_delay.c:12: PBLAZEPORT[PORTC_OUT] = 0x00;
02E  00000      ╰─────┬▶                     load s0, 00
02F  2C005       │ │  │                      output s0, 05
030              │ │  │                      ;	test_delay.c:13: delay_ms(5);
030  00B05       │ │  │                      load sb, 05
031  3001C       │ ╰───⤙                     call _delay_ms
032              │    │                      ;	test_delay.c:14: PBLAZEPORT[PORTC_OUT] = 0xff;
032  000FF       │    │                      load s0, ff
033  2C005       │    │                      output s0, 05
034              │    │                      ;	test_delay.c:15: delay_ms(5);
034  00B05       │    │                      load sb, 05
035  3001C       ╰─────⤙                     call _delay_ms
036  3402E            ╰⤙                     jump _L00124
037                                          ;REMOVED: return
037                                          ;--------------------------------------------------------
037                                          ; interrupt vector
037                                          ;--------------------------------------------------------

All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    /home/saul/projects/picoblaze/pbcc/delays/test_delay.psm


List of defined constants
-------------------------
    CONSTANT name      Value  Source PSM file
 ----------------      -----  ---------------
    BEL                07
    BS                 08
    CR                 0D
    DCS                90
    DEL                7F
    ESC                1B
    HT                 09
    LF                 0A
    NUL                00
    ST                 9C
    VT                 0B
    datestamp_day      19
    datestamp_month    09
    datestamp_year     13
    timestamp_hours    01
    timestamp_minutes  20
    timestamp_seconds  08


  No tables defined


List of text strings
--------------------
    STRING name      Value          Source PSM file
 --------------      -----          ---------------
    Opbasm_version$  "1.3.9"
    datestamp$       "25 Sep 2019"
    timestamp$       "01:32:08"


List of line labels
-------------------
    Label                   Addr  Source PSM file
 --------                   ----  ---------------
    _L00105                 00D   test_delay.psm
    _L00113                 01B   test_delay.psm
    _L00114                 01E   test_delay.psm
    _L00122                 02D   test_delay.psm
    _L00124                 02E   test_delay.psm
    _LC00129                010   test_delay.psm
    _LC00130                021   test_delay.psm
    __sdcc_loop             003   test_delay.psm
    __sdcc_program_startup  002   test_delay.psm
 *  _delay                  004   test_delay.psm
    _delay_10us             00B   test_delay.psm
    _delay_10us_fixed       007   test_delay.psm
    _delay_ms               01C   test_delay.psm
    _main                   02E   test_delay.psm
    rpt11                   004   test_delay.psm
 *  rpt22                   008   test_delay.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          8
   ADDCY        -
   AND          -
   CALL         5
   COMPARE      2
   DISABLE      -
   ENABLE       -
   FETCH        4
   INPUT        -
   JUMP         11
   LOAD         11
   OR           -
   OUTPUT       2
   RETURN       4
   RETURNI      -
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          -
   SR1          -
   SRA          -
   SRX          -
   STORE        4
   SUB          4
   SUBCY        -
   TEST         -
   XOR          -
