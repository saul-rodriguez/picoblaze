                      ;--------------------------------------------------------
                      ; File Created by SDCC : free open source ANSI-C Compiler
                      ; Version 3.0.1 #6227 (Oct 24 2011) (CYGWIN)
                      ; This file was generated Thu Sep 12 00:32:03 2019
                      ;--------------------------------------------------------
                      ;--------------------------------------------------------
                      ; global & static initialisations
                      ;--------------------------------------------------------

                      load sf, 3f
                      jump __sdcc_program_startup
                      ;--------------------------------------------------------
                      ; Home
                      ;--------------------------------------------------------
 __sdcc_program_startup:
                      call _main
                      ;	return from main will lock up
         __sdcc_loop:
                      jump __sdcc_loop
                      ;--------------------------------------------------------
                      ; code
                      ;--------------------------------------------------------
                      ;	device/include/pblaze/delay.h:51: void delay(unsigned char time)
              _delay:
                      load s0, sb
                      ;	device/include/pblaze/delay.h:53: volatile unsigned char i = time;
                      load s1, s0
             _L00101:
                      ;	device/include/pblaze/delay.h:54: for(; i > 0; i--)
                      load s0, s1
                      compare s0, 00
                      jump NZ, _LC00123
                      jump _L00107
            _LC00123:
                      load s0, 01
                      jump _L00108
             _L00107:
                      load s0, 00
             _L00108:
                      compare s0, 00
                      jump NZ, _LC00124
                      jump _L00105
            _LC00124:
                      ;	device/include/pblaze/delay.h:72: __endasm;
                      load s2, 00
                      add s2, 01
                      load s1, 00
               rpt22:
                      add s1, 01
                      load s0, 00
               rpt11:
                      add s0, 01
                      jump NZ, rpt11
                      compare s1, 00
                      jump NZ, rpt22
                      ;	device/include/pblaze/delay.h:54: for(; i > 0; i--)
                      sub s1, 01
                      jump _L00101
             _L00105:
                      return
                      ;	device/include/pblaze/port.h:16: void __port_write(unsigned char port, unsigned char arg)
       ___port_write:
                      ;	device/include/pblaze/port.h:24: __endasm;
                      output s1, s0
                      ;	device/include/pblaze/port.h:25: delay(MIN_PAUSE);
                      load sb, 0a
                      call _delay
                      return
                      ;	device/include/pblaze/port.h:28: unsigned char __port_read(volatile unsigned char port)
        ___port_read:
                      load s0, sb
                      ;	device/include/pblaze/port.h:30: volatile unsigned char d = 0;
                      load s1, 00
                      ;	device/include/pblaze/port.h:31: volatile unsigned char p = port;
                      load s2, s0
                      load s3, s2
                      ;	device/include/pblaze/port.h:34: __endasm;
                      input s1, s3
                      ;	device/include/pblaze/port.h:35: delay(MIN_PAUSE);
                      store s0, (sf)
                      sub sf, 01
                      store s1, (sf)
                      sub sf, 01
                      store s3, (sf)
                      sub sf, 01
                      load sb, 0a
                      call _delay
                      add sf, 01
                      fetch s3, (sf)
                      add sf, 01
                      fetch s1, (sf)
                      add sf, 01
                      fetch s0, (sf)
                      ;	device/include/pblaze/port.h:36: return d;
                      load s2, s1
                      load sb, s2
                      return
                      ;	test.c:8: void main()
               _main:
                      ;	test.c:12: aux = 0xaa;
                      load s0, aa
                      ;	test.c:14: while(aux) {
             _L00116:
                      compare s0, 00
                      jump NZ, _LC00125
                      jump _L00119
            _LC00125:
                      ;	test.c:15: __port_write(PORTA,aux);
                      store s0, (sf)
                      sub sf, 01
                      load sb, 00
                      load sc, s0
                      call ___port_write
                      add sf, 01
                      fetch s0, (sf)
                      ;	test.c:17: delay(1);
                      store s0, (sf)
                      sub sf, 01
                      load sb, 01
                      call _delay
                      add sf, 01
                      fetch s0, (sf)
                      ;	test.c:18: aux ^= 0xff;
                      load s1, s0
                      xor s1, ff
                      load s0, s1
                      jump _L00116
             _L00119:
                      return
                      ;--------------------------------------------------------
                      ; interrupt vector
                      ;--------------------------------------------------------
